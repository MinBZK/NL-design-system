name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: lint"
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: build"
        env:
          BASE_URL: "/NL-design-system/"
        run: pnpm run build

      - name: "Continuous Integration: lint build"
        env:
          BASE_URL: "/NL-design-system/"
        run: pnpm run lint-build

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/storybook/dist/

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: test"
        run: pnpm run test
#  publish-website:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    environment:
#      name: github-pages
#      url: ${{ steps.deploy-pages.outputs.page_url }}
#
#    permissions:
#      pages: write
#      id-token: write
#
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deploy-pages
#        uses: actions/deploy-pages@v4

#  publish-npm:
#    runs-on: ubuntu-latest
#    needs: [lint, test]
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout release branch
#        uses: actions/checkout@v4
#        with:
#          token: ${{ secrets.GH_TOKEN }}
#
#      - name: Install pnpm package manager
#        uses: pnpm/action-setup@v4
#
#      - name: Set up Node.js version
#        uses: actions/setup-node@v4
#        with:
#          node-version-file: .nvmrc
#          cache: pnpm
#
#      - name: "Continuous Deployment: install"
#        run: |
#          pnpm install --frozen-lockfile
#          pnpm ls --recursive
#
#      - name: "Continuous Deployment: build"
#        run: pnpm run build

# lets exclude this for now...
# - name: "Continuous Deployment: publish to GitHub repository"
#   env:
#     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#     GIT_AUTHOR_EMAIL: ""
#     GIT_AUTHOR_NAME: "NL Design System"
#     GIT_COMMITTER_EMAIL: ""
#     GIT_COMMITTER_NAME: "NL Design System"
#   run: |
#     git push --set-upstream origin HEAD
#     pnpm run release

#      - name: "Continuous Deployment: publish to npm"
#        env:
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#        run: |
#          pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
#          pnpm run publish
#          pnpm config delete "//registry.npmjs.org/:_authToken"
